Resumo das aulas:

Iniciando um repositório e mandando para o github: 
git ini
git add algum aquivo do projeto
git commit -m "first commit" 
git branch -m main 
git remote add origin -código gerado na criação do repositório do github-
git push -u origin main

finish
----------------------------------------------------------------------------------------
Comandos - sempre "git" na frente
git alguma coisa

Alguns comandos:

git status - para saber como está a situação dos arquivos do projeto (se já foram adicionados, se já estão commitados, se foram modificados...)
git add - para adicionar novos arquivos para o projeto (não necessário para arquivos que já existiam e apenas foram modificados) 
git commit - para "commitar" um arquivo modificado ou um arquivo recém adicionado (preparar para enviar para o repositório no github)
git push - para enviar os arquivos commitados para o github (envia apenas os arquivos commitados, ou seja, que foram modificados ou criados)
git clone - para trazer os arquivos de um repositório do github para a sua máquina. Para isso, é necessário entrar no repositório desejado, ir em "CODE" e copiar o link.
exemplo: git clone o_link_copiado_do_seu_git
git pull - depois de já ter o acesso ao repositório, o pull tem a função de trazer as ultimas alterações feitas por outro desenvolvedor, ou por você mesmo em um 
outro computador.
git rm - deletar um arquivo do projeto 
git log - para ter acesso a todas as alterações do projeto (todos os commits)
git mv - para trocar um arquivo de pasta ou renomeá-lo. Basta dar o comando git mv nome.do.arquivo nova.pasta/novo.nome ou somente novo.nome ou somente nova.pasta/mesmo.nome
git checkout - para voltar um arquivo a seu estado original (ao estado inicial que está no github)

ls - para saber as pastas que você deseja acessar 
cd - para acessar as pastas 

-------------------------------------------------------------------------------------



